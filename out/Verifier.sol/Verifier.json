{
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "sellToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "buyToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "sellAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "buyAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "validTo",
              "type": "uint32"
            },
            {
              "internalType": "bytes32",
              "name": "appData",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "feeAmount",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "kind",
              "type": "bytes32"
            },
            {
              "internalType": "bool",
              "name": "partiallyFillable",
              "type": "bool"
            },
            {
              "internalType": "bytes32",
              "name": "sellTokenBalance",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "buyTokenBalance",
              "type": "bytes32"
            }
          ],
          "internalType": "struct GPv2Order.Data",
          "name": "gpv2Order",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "sellToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "buyToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "sellAmount",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "buyAmount",
              "type": "uint256[]"
            },
            {
              "internalType": "uint32",
              "name": "validTo",
              "type": "uint32"
            },
            {
              "internalType": "uint256",
              "name": "feeAmount",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "sellTokenBalance",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "buyTokenBalance",
              "type": "bytes32"
            }
          ],
          "internalType": "struct CurvedOrder.Data",
          "name": "curvedOrder",
          "type": "tuple"
        },
        {
          "internalType": "bytes32",
          "name": "curvedOrderSignature",
          "type": "bytes32"
        }
      ],
      "name": "generateSignature",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "isValidSignature",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "magicValue",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50610567806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80631626ba7e1461003b578063655fc78014610075575b600080fd5b610057610049366004610101565b630b135d3f60e11b92915050565b6040516001600160e01b031990911681526020015b60405180910390f35b6100886100833660046101bc565b610095565b60405161006c9190610249565b606060008484846040516020016100ae93929190610417565b604051602081830303815290604052905030816040516020016100d29291906104f9565b6040516020818303038152906040529150509392505050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561011457600080fd5b82359150602083013567ffffffffffffffff8082111561013357600080fd5b818501915085601f83011261014757600080fd5b813581811115610159576101596100eb565b604051601f8201601f19908116603f01168101908382118183101715610181576101816100eb565b8160405282815288602084870101111561019a57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60008060008385036101c08112156101d357600080fd5b610180808212156101e357600080fd5b859450840135905067ffffffffffffffff81111561020057600080fd5b8401610120818703121561021357600080fd5b929592945050506101a0919091013590565b60005b83811015610240578181015183820152602001610228565b50506000910152565b6020815260008251806020840152610268816040850160208701610225565b601f01601f19169190910160400192915050565b80356001600160a01b038116811461029357600080fd5b919050565b803563ffffffff8116811461029357600080fd5b8035801515811461029357600080fd5b6000808335601e198436030181126102d357600080fd5b830160208101925035905067ffffffffffffffff8111156102f357600080fd5b8060051b360382131561030557600080fd5b9250929050565b81835260006001600160fb1b0383111561032557600080fd5b8260051b80836020870137939093016020019392505050565b600061012061035d846103508561027c565b6001600160a01b03169052565b6103696020840161027c565b6001600160a01b031660208501526103836040840161027c565b6001600160a01b0316604085015261039e60608401846102bc565b8260608701526103b1838701828461030c565b925050506103c260808401846102bc565b85830360808701526103d583828461030c565b925050506103e560a08401610298565b63ffffffff1660a085015260c0838101359085015260e080840135908501526101009283013592909301919091525090565b60006101c0610429836103508861027c565b6104356020870161027c565b6001600160a01b0316602084015261044f6040870161027c565b6001600160a01b038116604085015250606086013560608401526080860135608084015261047f60a08701610298565b63ffffffff1660a084015260c0868101359084015260e0808701359084015261010080870135908401526101206104b78188016102ac565b1515908401526101408681013590840152610160808701359084015261018083018190526104e78184018661033e565b915050826101a0830152949350505050565b6bffffffffffffffffffffffff198360601b16815260008251610523816014850160208701610225565b91909101601401939250505056fea26469706673582212203b67920e29196a23b4dae01ccb778a52106c17b12a98c7d949ac177d0feabd6064736f6c63430008110033",
    "sourceMap": "174:952:2:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c80631626ba7e1461003b578063655fc78014610075575b600080fd5b610057610049366004610101565b630b135d3f60e11b92915050565b6040516001600160e01b031990911681526020015b60405180910390f35b6100886100833660046101bc565b610095565b60405161006c9190610249565b606060008484846040516020016100ae93929190610417565b604051602081830303815290604052905030816040516020016100d29291906104f9565b6040516020818303038152906040529150509392505050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561011457600080fd5b82359150602083013567ffffffffffffffff8082111561013357600080fd5b818501915085601f83011261014757600080fd5b813581811115610159576101596100eb565b604051601f8201601f19908116603f01168101908382118183101715610181576101816100eb565b8160405282815288602084870101111561019a57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60008060008385036101c08112156101d357600080fd5b610180808212156101e357600080fd5b859450840135905067ffffffffffffffff81111561020057600080fd5b8401610120818703121561021357600080fd5b929592945050506101a0919091013590565b60005b83811015610240578181015183820152602001610228565b50506000910152565b6020815260008251806020840152610268816040850160208701610225565b601f01601f19169190910160400192915050565b80356001600160a01b038116811461029357600080fd5b919050565b803563ffffffff8116811461029357600080fd5b8035801515811461029357600080fd5b6000808335601e198436030181126102d357600080fd5b830160208101925035905067ffffffffffffffff8111156102f357600080fd5b8060051b360382131561030557600080fd5b9250929050565b81835260006001600160fb1b0383111561032557600080fd5b8260051b80836020870137939093016020019392505050565b600061012061035d846103508561027c565b6001600160a01b03169052565b6103696020840161027c565b6001600160a01b031660208501526103836040840161027c565b6001600160a01b0316604085015261039e60608401846102bc565b8260608701526103b1838701828461030c565b925050506103c260808401846102bc565b85830360808701526103d583828461030c565b925050506103e560a08401610298565b63ffffffff1660a085015260c0838101359085015260e080840135908501526101009283013592909301919091525090565b60006101c0610429836103508861027c565b6104356020870161027c565b6001600160a01b0316602084015261044f6040870161027c565b6001600160a01b038116604085015250606086013560608401526080860135608084015261047f60a08701610298565b63ffffffff1660a084015260c0868101359084015260e0808701359084015261010080870135908401526101206104b78188016102ac565b1515908401526101408681013590840152610160808701359084015261018083018190526104e78184018661033e565b915050826101a0830152949350505050565b6bffffffffffffffffffffffff198360601b16815260008251610523816014850160208701610225565b91909101601401939250505056fea26469706673582212203b67920e29196a23b4dae01ccb778a52106c17b12a98c7d949ac177d0feabd6064736f6c63430008110033",
    "sourceMap": "174:952:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;217:177;;;;;;:::i;:::-;-1:-1:-1;;;217:177:2;;;;;;;;-1:-1:-1;;;;;;1302:33:10;;;1284:52;;1272:2;1257:18;217:177:2;;;;;;;;736:388;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;920:22;954:31;999:9;1010:11;1023:20;988:56;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;954:90;;1091:4;1098:18;1066:51;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1054:63;;944:180;736:388;;;;;:::o;14:127:10:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:989;223:6;231;284:2;272:9;263:7;259:23;255:32;252:52;;;300:1;297;290:12;252:52;336:9;323:23;313:33;;397:2;386:9;382:18;369:32;420:18;461:2;453:6;450:14;447:34;;;477:1;474;467:12;447:34;515:6;504:9;500:22;490:32;;560:7;553:4;549:2;545:13;541:27;531:55;;582:1;579;572:12;531:55;618:2;605:16;640:2;636;633:10;630:36;;;646:18;;:::i;:::-;721:2;715:9;689:2;775:13;;-1:-1:-1;;771:22:10;;;795:2;767:31;763:40;751:53;;;819:18;;;839:22;;;816:46;813:72;;;865:18;;:::i;:::-;905:10;901:2;894:22;940:2;932:6;925:18;980:7;975:2;970;966;962:11;958:20;955:33;952:53;;;1001:1;998;991:12;952:53;1057:2;1052;1048;1044:11;1039:2;1031:6;1027:15;1014:46;1102:1;1097:2;1092;1084:6;1080:15;1076:24;1069:35;1123:6;1113:16;;;;;;;146:989;;;;;:::o;1347:615::-;1472:6;1480;1488;1532:9;1523:7;1519:23;1562:3;1558:2;1554:12;1551:32;;;1579:1;1576;1569:12;1551:32;1602:3;1625:2;1621;1617:11;1614:31;;;1641:1;1638;1631:12;1614:31;1664:9;;-1:-1:-1;1709:18:10;;1696:32;;-1:-1:-1;1751:18:10;1740:30;;1737:50;;;1783:1;1780;1773:12;1737:50;1806:22;;1862:3;1844:16;;;1840:26;1837:46;;;1879:1;1876;1869:12;1837:46;1347:615;;1902:2;;-1:-1:-1;;;1951:3:10;1936:19;;;;1923:33;;1347:615::o;1967:250::-;2052:1;2062:113;2076:6;2073:1;2070:13;2062:113;;;2152:11;;;2146:18;2133:11;;;2126:39;2098:2;2091:10;2062:113;;;-1:-1:-1;;2209:1:10;2191:16;;2184:27;1967:250::o;2222:394::-;2369:2;2358:9;2351:21;2332:4;2401:6;2395:13;2444:6;2439:2;2428:9;2424:18;2417:34;2460:79;2532:6;2527:2;2516:9;2512:18;2507:2;2499:6;2495:15;2460:79;:::i;:::-;2600:2;2579:15;-1:-1:-1;;2575:29:10;2560:45;;;;2607:2;2556:54;;2222:394;-1:-1:-1;;2222:394:10:o;2621:181::-;2697:20;;-1:-1:-1;;;;;2746:31:10;;2736:42;;2726:70;;2792:1;2789;2782:12;2726:70;2621:181;;;:::o;2924:163::-;2991:20;;3051:10;3040:22;;3030:33;;3020:61;;3077:1;3074;3067:12;3191:160;3256:20;;3312:13;;3305:21;3295:32;;3285:60;;3341:1;3338;3331:12;3452:520;3522:5;3529:6;3589:3;3576:17;3675:2;3671:7;3660:8;3644:14;3640:29;3636:43;3616:18;3612:68;3602:96;;3694:1;3691;3684:12;3602:96;3722:33;;3826:4;3813:18;;;-1:-1:-1;3774:21:10;;-1:-1:-1;3854:18:10;3843:30;;3840:50;;;3886:1;3883;3876:12;3840:50;3940:6;3937:1;3933:14;3917;3913:35;3906:5;3902:47;3899:67;;;3962:1;3959;3952:12;3899:67;3452:520;;;;;:::o;3977:311::-;4065:19;;;4047:3;-1:-1:-1;;;;;4096:31:10;;4093:51;;;4140:1;4137;4130:12;4093:51;4176:6;4173:1;4169:14;4228:8;4221:5;4214:4;4209:3;4205:14;4192:45;4257:18;;;;4277:4;4253:29;;3977:311;-1:-1:-1;;;3977:311:10:o;4293:1315::-;4349:3;4377:6;4392:66;4454:3;4419:33;4446:5;4419:33;:::i;:::-;-1:-1:-1;;;;;2881:31:10;2869:44;;2807:112;4392:66;4487:44;4525:4;4518:5;4514:16;4487:44;:::i;:::-;-1:-1:-1;;;;;2881:31:10;4590:4;4581:14;;2869:44;4627;4665:4;4654:16;;4627:44;:::i;:::-;-1:-1:-1;;;;;2881:31:10;4732:4;4723:14;;2869:44;4783:67;4844:4;4833:16;;4837:5;4783:67;:::i;:::-;4882:2;4875:4;4870:3;4866:14;4859:26;4906:81;4983:2;4978:3;4974:12;4960;4944:14;4906:81;:::i;:::-;4894:93;;;;5034:67;5095:4;5088:5;5084:16;5077:5;5034:67;:::i;:::-;5143:3;5137:4;5133:14;5126:4;5121:3;5117:14;5110:38;5171:75;5241:4;5225:14;5209;5171:75;:::i;:::-;5157:89;;;;5277:35;5306:4;5299:5;5295:16;5277:35;:::i;:::-;3168:10;3157:22;5364:4;5355:14;;3145:35;5426:4;5415:16;;;5402:30;5386:14;;;5379:54;5489:4;5478:16;;;5465:30;5449:14;;;5442:54;5515:6;5564:14;;;5551:28;5537:12;;;;5530:50;;;;-1:-1:-1;5537:12:10;4293:1315::o;5613:1646::-;5853:4;5882:3;5894:73;5957:9;5921:34;5948:6;5921:34;:::i;5894:73::-;5996:45;6035:4;6027:6;6023:17;5996:45;:::i;:::-;-1:-1:-1;;;;;2881:31:10;6106:4;6091:20;;2869:44;6143:45;6182:4;6170:17;;6143:45;:::i;:::-;-1:-1:-1;;;;;2881:31:10;;6255:4;6240:20;;2869:44;6197:64;6324:4;6316:6;6312:17;6299:31;6292:4;6281:9;6277:20;6270:61;6394:4;6386:6;6382:17;6369:31;6362:4;6351:9;6347:20;6340:61;6432:36;6462:4;6454:6;6450:17;6432:36;:::i;:::-;3168:10;3157:22;6526:4;6511:20;;3145:35;6595:4;6583:17;;;6570:31;6548:20;;;6541:61;6665:4;6653:17;;;6640:31;6618:20;;;6611:61;6691:6;6746:15;;;6733:29;6713:18;;;6706:57;6782:6;6819:32;6835:15;;;6819:32;:::i;:::-;3426:13;3419:21;6892:18;;;3407:34;6930:6;6985:15;;;6972:29;6952:18;;;6945:57;7021:6;7076:15;;;7063:29;7043:18;;;7036:57;7124:3;7109:19;;7102:31;;;7150:59;7190:18;;;7182:6;7150:59;:::i;:::-;7142:67;;;7246:6;7240:3;7229:9;7225:19;7218:35;5613:1646;;;;;;:::o;7264:408::-;7476:26;7472:31;7463:6;7459:2;7455:15;7451:53;7446:3;7439:66;7421:3;7534:6;7528:13;7550:75;7618:6;7613:2;7608:3;7604:12;7597:4;7589:6;7585:17;7550:75;:::i;:::-;7645:16;;;;7663:2;7641:25;;7264:408;-1:-1:-1;;;7264:408:10:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "generateSignature((address,address,address,uint256,uint256,uint32,bytes32,uint256,bytes32,bool,bytes32,bytes32),(address,address,address,uint256[],uint256[],uint32,uint256,bytes32,bytes32),bytes32)": "655fc780",
    "isValidSignature(bytes32,bytes)": "1626ba7e"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"sellToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"buyToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sellAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"buyAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"validTo\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"appData\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"kind\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"partiallyFillable\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"sellTokenBalance\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"buyTokenBalance\",\"type\":\"bytes32\"}],\"internalType\":\"struct GPv2Order.Data\",\"name\":\"gpv2Order\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"sellToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"buyToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"sellAmount\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"buyAmount\",\"type\":\"uint256[]\"},{\"internalType\":\"uint32\",\"name\":\"validTo\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"sellTokenBalance\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"buyTokenBalance\",\"type\":\"bytes32\"}],\"internalType\":\"struct CurvedOrder.Data\",\"name\":\"curvedOrder\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"curvedOrderSignature\",\"type\":\"bytes32\"}],\"name\":\"generateSignature\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"generateSignature((address,address,address,uint256,uint256,uint32,bytes32,uint256,bytes32,bool,bytes32,bytes32),(address,address,address,uint256[],uint256[],uint32,uint256,bytes32,bytes32),bytes32)\":{\"params\":{\"curvedOrder\":\"CurvedOrder.Data created by LP / Curved order submitter\",\"curvedOrderSignature\":\"signature of signed curvedOrder\",\"gpv2Order\":\"GPv2Order.Data created by solver\"}},\"isValidSignature(bytes32,bytes)\":{\"details\":\"Should return whether the signature provided is valid for the provided data\",\"params\":{\"_hash\":\"Hash of the data to be signed\",\"_signature\":\"Signature byte array associated with _data MUST return the bytes4 magic value 0x1626ba7e when function passes. MUST NOT modify state (using STATICCALL for solc < 0.5, view modifier for solc > 0.5) MUST allow external calls\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"generateSignature((address,address,address,uint256,uint256,uint32,bytes32,uint256,bytes32,bool,bytes32,bytes32),(address,address,address,uint256[],uint256[],uint32,uint256,bytes32,bytes32),bytes32)\":{\"notice\":\"generateSignature is a helper method used by solver to generate a signature to attach to GPv2Trade\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Verifier.sol\":\"Verifier\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":solmate/=lib/solmate/src/\",\":weird-erc20/=lib/solmate/lib/weird-erc20/src/\"]},\"sources\":{\"src/Verifier.sol\":{\"keccak256\":\"0x1e06f18105d4cfa81e834c8e8f342e60af6fe5dcec42a553047a1648490abc51\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://d05fc50ee85e439ade3808926ec0a6effc626dbe11640d66f5c335cc8227b545\",\"dweb:/ipfs/QmSxcw1iDEMhWNTox92Mp37YCHy4Y1x6J76eiqH3m48Lc3\"]},\"src/interfaces/ERC1271.sol\":{\"keccak256\":\"0xd350feb7d8f9f3231a6e49b8ddc1f58d7e68a5e94eae9bf3ea181921f07e3004\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://57ecfd31d180158cc5416a859d4f8d4664f8e44924917012b32dbd7048511688\",\"dweb:/ipfs/QmY7uGmnMFaf5vqbSS1PrxSjYr5SKUCAXayaP7nRR13HMh\"]},\"src/interfaces/IERC20.sol\":{\"keccak256\":\"0xea1feab007b994ca55b7d7ac3c210802f3d58749b973c4d99b81fdbc18df06b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://047f0be224dddb4b6ff7e9b9caf8af3edcb278af5c97214654a0e2e66192049e\",\"dweb:/ipfs/QmawhghCFiGbr6Dt7RDZ1Cm3deni5HuwjsU7xs1jskwxrX\"]},\"src/libraries/CurvedOrder.sol\":{\"keccak256\":\"0x216ee7e66e82eb129eaffefd9044723affd7d4cedbd2ee2962623b38d533050c\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://44293a6e10f38434b8257a0fac1ee0ffba7c8d416450a610bc475d80f95c616c\",\"dweb:/ipfs/QmdaaY3yx1gsdBMSTNNx5SALhGYVhpJGSAXmY1xG8A8oG8\"]},\"src/libraries/GPv2Order.sol\":{\"keccak256\":\"0x6b64cd91f2bfff58a4965083ab92673beeebffb8a543c7af1544872add60d1d6\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://71d41a5c6747df5deec1b25d81c42afe84951f3afdf23ec592bdc6d11aea4c2c\",\"dweb:/ipfs/QmeQE3q1MW8XSKKE9csQHaxSzM1HFQUthAThTJmWftfgAW\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "struct GPv2Order.Data",
              "name": "gpv2Order",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "sellToken",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "buyToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "sellAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "buyAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "validTo",
                  "type": "uint32"
                },
                {
                  "internalType": "bytes32",
                  "name": "appData",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "feeAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "kind",
                  "type": "bytes32"
                },
                {
                  "internalType": "bool",
                  "name": "partiallyFillable",
                  "type": "bool"
                },
                {
                  "internalType": "bytes32",
                  "name": "sellTokenBalance",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "buyTokenBalance",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "struct CurvedOrder.Data",
              "name": "curvedOrder",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "sellToken",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "buyToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                },
                {
                  "internalType": "uint256[]",
                  "name": "sellAmount",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "buyAmount",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint32",
                  "name": "validTo",
                  "type": "uint32"
                },
                {
                  "internalType": "uint256",
                  "name": "feeAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "sellTokenBalance",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "buyTokenBalance",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "bytes32",
              "name": "curvedOrderSignature",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "generateSignature",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_hash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "_signature",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isValidSignature",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "magicValue",
              "type": "bytes4"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "generateSignature((address,address,address,uint256,uint256,uint32,bytes32,uint256,bytes32,bool,bytes32,bytes32),(address,address,address,uint256[],uint256[],uint32,uint256,bytes32,bytes32),bytes32)": {
            "params": {
              "curvedOrder": "CurvedOrder.Data created by LP / Curved order submitter",
              "curvedOrderSignature": "signature of signed curvedOrder",
              "gpv2Order": "GPv2Order.Data created by solver"
            }
          },
          "isValidSignature(bytes32,bytes)": {
            "details": "Should return whether the signature provided is valid for the provided data",
            "params": {
              "_hash": "Hash of the data to be signed",
              "_signature": "Signature byte array associated with _data MUST return the bytes4 magic value 0x1626ba7e when function passes. MUST NOT modify state (using STATICCALL for solc < 0.5, view modifier for solc > 0.5) MUST allow external calls"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "generateSignature((address,address,address,uint256,uint256,uint32,bytes32,uint256,bytes32,bool,bytes32,bytes32),(address,address,address,uint256[],uint256[],uint32,uint256,bytes32,bytes32),bytes32)": {
            "notice": "generateSignature is a helper method used by solver to generate a signature to attach to GPv2Trade"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":solmate/=lib/solmate/src/",
        ":weird-erc20/=lib/solmate/lib/weird-erc20/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/Verifier.sol": "Verifier"
      },
      "libraries": {}
    },
    "sources": {
      "src/Verifier.sol": {
        "keccak256": "0x1e06f18105d4cfa81e834c8e8f342e60af6fe5dcec42a553047a1648490abc51",
        "urls": [
          "bzz-raw://d05fc50ee85e439ade3808926ec0a6effc626dbe11640d66f5c335cc8227b545",
          "dweb:/ipfs/QmSxcw1iDEMhWNTox92Mp37YCHy4Y1x6J76eiqH3m48Lc3"
        ],
        "license": "Unlicense"
      },
      "src/interfaces/ERC1271.sol": {
        "keccak256": "0xd350feb7d8f9f3231a6e49b8ddc1f58d7e68a5e94eae9bf3ea181921f07e3004",
        "urls": [
          "bzz-raw://57ecfd31d180158cc5416a859d4f8d4664f8e44924917012b32dbd7048511688",
          "dweb:/ipfs/QmY7uGmnMFaf5vqbSS1PrxSjYr5SKUCAXayaP7nRR13HMh"
        ],
        "license": "LGPL-3.0-or-later"
      },
      "src/interfaces/IERC20.sol": {
        "keccak256": "0xea1feab007b994ca55b7d7ac3c210802f3d58749b973c4d99b81fdbc18df06b9",
        "urls": [
          "bzz-raw://047f0be224dddb4b6ff7e9b9caf8af3edcb278af5c97214654a0e2e66192049e",
          "dweb:/ipfs/QmawhghCFiGbr6Dt7RDZ1Cm3deni5HuwjsU7xs1jskwxrX"
        ],
        "license": "MIT"
      },
      "src/libraries/CurvedOrder.sol": {
        "keccak256": "0x216ee7e66e82eb129eaffefd9044723affd7d4cedbd2ee2962623b38d533050c",
        "urls": [
          "bzz-raw://44293a6e10f38434b8257a0fac1ee0ffba7c8d416450a610bc475d80f95c616c",
          "dweb:/ipfs/QmdaaY3yx1gsdBMSTNNx5SALhGYVhpJGSAXmY1xG8A8oG8"
        ],
        "license": "LGPL-3.0-or-later"
      },
      "src/libraries/GPv2Order.sol": {
        "keccak256": "0x6b64cd91f2bfff58a4965083ab92673beeebffb8a543c7af1544872add60d1d6",
        "urls": [
          "bzz-raw://71d41a5c6747df5deec1b25d81c42afe84951f3afdf23ec592bdc6d11aea4c2c",
          "dweb:/ipfs/QmeQE3q1MW8XSKKE9csQHaxSzM1HFQUthAThTJmWftfgAW"
        ],
        "license": "LGPL-3.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/Verifier.sol",
    "id": 1913,
    "exportedSymbols": {
      "CurvedOrder": [
        2264
      ],
      "EIP1271Verifier": [
        1931
      ],
      "GPv2EIP1271": [
        1919
      ],
      "GPv2Order": [
        2420
      ],
      "IERC20": [
        2027
      ],
      "Verifier": [
        1912
      ]
    },
    "nodeType": "SourceUnit",
    "src": "38:1089:2",
    "nodes": [
      {
        "id": 1855,
        "nodeType": "PragmaDirective",
        "src": "38:24:2",
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 1856,
        "nodeType": "ImportDirective",
        "src": "64:34:2",
        "absolutePath": "src/interfaces/ERC1271.sol",
        "file": "./interfaces/ERC1271.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1913,
        "sourceUnit": 1932,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1857,
        "nodeType": "ImportDirective",
        "src": "99:37:2",
        "absolutePath": "src/libraries/CurvedOrder.sol",
        "file": "./libraries/CurvedOrder.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1913,
        "sourceUnit": 2265,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1858,
        "nodeType": "ImportDirective",
        "src": "137:35:2",
        "absolutePath": "src/libraries/GPv2Order.sol",
        "file": "./libraries/GPv2Order.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1913,
        "sourceUnit": 2421,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1912,
        "nodeType": "ContractDefinition",
        "src": "174:952:2",
        "nodes": [
          {
            "id": 1876,
            "nodeType": "FunctionDefinition",
            "src": "217:177:2",
            "body": {
              "id": 1875,
              "nodeType": "Block",
              "src": "325:69:2",
              "statements": [
                {
                  "expression": {
                    "id": 1869,
                    "name": "_hash",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1862,
                    "src": "335:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 1870,
                  "nodeType": "ExpressionStatement",
                  "src": "335:5:2"
                },
                {
                  "expression": {
                    "id": 1871,
                    "name": "_signature",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1864,
                    "src": "350:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 1872,
                  "nodeType": "ExpressionStatement",
                  "src": "350:10:2"
                },
                {
                  "expression": {
                    "hexValue": "30783136323662613765",
                    "id": 1873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "377:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_371636862_by_1",
                      "typeString": "int_const 371636862"
                    },
                    "value": "0x1626ba7e"
                  },
                  "functionReturnParameters": 1868,
                  "id": 1874,
                  "nodeType": "Return",
                  "src": "370:17:2"
                }
              ]
            },
            "baseFunctions": [
              1930
            ],
            "functionSelector": "1626ba7e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isValidSignature",
            "nameLocation": "226:16:2",
            "parameters": {
              "id": 1865,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1862,
                  "mutability": "mutable",
                  "name": "_hash",
                  "nameLocation": "251:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1876,
                  "src": "243:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1861,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "243:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1864,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "271:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1876,
                  "src": "258:23:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1863,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "258:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "242:40:2"
            },
            "returnParameters": {
              "id": 1868,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1867,
                  "mutability": "mutable",
                  "name": "magicValue",
                  "nameLocation": "313:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1876,
                  "src": "306:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 1866,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "306:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "305:19:2"
            },
            "scope": 1912,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1911,
            "nodeType": "FunctionDefinition",
            "src": "736:388:2",
            "body": {
              "id": 1910,
              "nodeType": "Block",
              "src": "944:180:2",
              "statements": [
                {
                  "assignments": [
                    1891
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1891,
                      "mutability": "mutable",
                      "name": "encodedCurvedOrder",
                      "nameLocation": "967:18:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1910,
                      "src": "954:31:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1890,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "954:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1898,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1894,
                        "name": "gpv2Order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1880,
                        "src": "999:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$2295_calldata_ptr",
                          "typeString": "struct GPv2Order.Data calldata"
                        }
                      },
                      {
                        "id": 1895,
                        "name": "curvedOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1883,
                        "src": "1010:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$2055_calldata_ptr",
                          "typeString": "struct CurvedOrder.Data calldata"
                        }
                      },
                      {
                        "id": 1896,
                        "name": "curvedOrderSignature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1885,
                        "src": "1023:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Data_$2295_calldata_ptr",
                          "typeString": "struct GPv2Order.Data calldata"
                        },
                        {
                          "typeIdentifier": "t_struct$_Data_$2055_calldata_ptr",
                          "typeString": "struct CurvedOrder.Data calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 1892,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "988:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 1893,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "992:6:2",
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "src": "988:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 1897,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "988:56:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "954:90:2"
                },
                {
                  "expression": {
                    "id": 1908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1899,
                      "name": "signature",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1888,
                      "src": "1054:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 1904,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "1091:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Verifier_$1912",
                                "typeString": "contract Verifier"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Verifier_$1912",
                                "typeString": "contract Verifier"
                              }
                            ],
                            "id": 1903,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1083:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1902,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1083:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1905,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1083:13:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1906,
                          "name": "encodedCurvedOrder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1891,
                          "src": "1098:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "id": 1900,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "1066:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 1901,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "1070:12:2",
                        "memberName": "encodePacked",
                        "nodeType": "MemberAccess",
                        "src": "1066:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function () pure returns (bytes memory)"
                        }
                      },
                      "id": 1907,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1066:51:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "1054:63:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 1909,
                  "nodeType": "ExpressionStatement",
                  "src": "1054:63:2"
                }
              ]
            },
            "documentation": {
              "id": 1877,
              "nodeType": "StructuredDocumentation",
              "src": "400:331:2",
              "text": " @notice generateSignature is a helper method used by solver to generate a signature to attach to GPv2Trade\n @param gpv2Order GPv2Order.Data created by solver\n @param curvedOrder CurvedOrder.Data created by LP / Curved order submitter\n @param curvedOrderSignature signature of signed curvedOrder"
            },
            "functionSelector": "655fc780",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "generateSignature",
            "nameLocation": "745:17:2",
            "parameters": {
              "id": 1886,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1880,
                  "mutability": "mutable",
                  "name": "gpv2Order",
                  "nameLocation": "796:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1911,
                  "src": "772:33:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Data_$2295_calldata_ptr",
                    "typeString": "struct GPv2Order.Data"
                  },
                  "typeName": {
                    "id": 1879,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1878,
                      "name": "GPv2Order.Data",
                      "nameLocations": [
                        "772:9:2",
                        "782:4:2"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2295,
                      "src": "772:14:2"
                    },
                    "referencedDeclaration": 2295,
                    "src": "772:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$2295_storage_ptr",
                      "typeString": "struct GPv2Order.Data"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1883,
                  "mutability": "mutable",
                  "name": "curvedOrder",
                  "nameLocation": "841:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1911,
                  "src": "815:37:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Data_$2055_calldata_ptr",
                    "typeString": "struct CurvedOrder.Data"
                  },
                  "typeName": {
                    "id": 1882,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1881,
                      "name": "CurvedOrder.Data",
                      "nameLocations": [
                        "815:11:2",
                        "827:4:2"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2055,
                      "src": "815:16:2"
                    },
                    "referencedDeclaration": 2055,
                    "src": "815:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Data_$2055_storage_ptr",
                      "typeString": "struct CurvedOrder.Data"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1885,
                  "mutability": "mutable",
                  "name": "curvedOrderSignature",
                  "nameLocation": "870:20:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1911,
                  "src": "862:28:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1884,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "862:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "762:134:2"
            },
            "returnParameters": {
              "id": 1889,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1888,
                  "mutability": "mutable",
                  "name": "signature",
                  "nameLocation": "933:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1911,
                  "src": "920:22:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1887,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "920:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "919:24:2"
            },
            "scope": 1912,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1859,
              "name": "EIP1271Verifier",
              "nameLocations": [
                "195:15:2"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1931,
              "src": "195:15:2"
            },
            "id": 1860,
            "nodeType": "InheritanceSpecifier",
            "src": "195:15:2"
          }
        ],
        "canonicalName": "Verifier",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          1912,
          1931
        ],
        "name": "Verifier",
        "nameLocation": "183:8:2",
        "scope": 1913,
        "usedErrors": []
      }
    ],
    "license": "Unlicense"
  },
  "id": 2
}